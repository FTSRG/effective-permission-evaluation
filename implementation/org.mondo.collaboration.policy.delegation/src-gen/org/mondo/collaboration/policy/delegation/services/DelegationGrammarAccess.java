/*
 * generated by Xtext 2.13.0
 */
package org.mondo.collaboration.policy.delegation.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;
import org.mondo.collaboration.policy.services.RulesGrammarAccess;

@Singleton
public class DelegationGrammarAccess extends AbstractGrammarElementFinder {
	
	public class DelegationModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.delegation.Delegation.DelegationModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportImportParserRuleCall_0_0 = (RuleCall)cImportAssignment_0.eContents().get(0);
		private final Assignment cPolicyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPolicyPolicyParserRuleCall_1_0 = (RuleCall)cPolicyAssignment_1.eContents().get(0);
		
		//DelegationModel:
		//	^import=Import
		//	policy=Policy;
		@Override public ParserRule getRule() { return rule; }
		
		//^import=Import policy=Policy
		public Group getGroup() { return cGroup; }
		
		//^import=Import
		public Assignment getImportAssignment_0() { return cImportAssignment_0; }
		
		//Import
		public RuleCall getImportImportParserRuleCall_0_0() { return cImportImportParserRuleCall_0_0; }
		
		//policy=Policy
		public Assignment getPolicyAssignment_1() { return cPolicyAssignment_1; }
		
		//Policy
		public RuleCall getPolicyPolicyParserRuleCall_1_0() { return cPolicyPolicyParserRuleCall_1_0; }
	}
	public class PolicyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.delegation.Delegation.Policy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPolicyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRulesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRulesRuleParserRuleCall_3_0 = (RuleCall)cRulesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cWithKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cResolutionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cResolutionResolutionTypeEnumRuleCall_6_0 = (RuleCall)cResolutionAssignment_6.eContents().get(0);
		private final Keyword cResolutionKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//@ Override Policy:
		//	'policy' name=ID '{'
		//	rules+=Rule*
		//	'}' 'with' resolution=ResolutionType 'resolution';
		@Override public ParserRule getRule() { return rule; }
		
		//'policy' name=ID '{' rules+=Rule* '}' 'with' resolution=ResolutionType 'resolution'
		public Group getGroup() { return cGroup; }
		
		//'policy'
		public Keyword getPolicyKeyword_0() { return cPolicyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//rules+=Rule*
		public Assignment getRulesAssignment_3() { return cRulesAssignment_3; }
		
		//Rule
		public RuleCall getRulesRuleParserRuleCall_3_0() { return cRulesRuleParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
		
		//'with'
		public Keyword getWithKeyword_5() { return cWithKeyword_5; }
		
		//resolution=ResolutionType
		public Assignment getResolutionAssignment_6() { return cResolutionAssignment_6; }
		
		//ResolutionType
		public RuleCall getResolutionResolutionTypeEnumRuleCall_6_0() { return cResolutionResolutionTypeEnumRuleCall_6_0; }
		
		//'resolution'
		public Keyword getResolutionKeyword_7() { return cResolutionKeyword_7; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mondo.collaboration.policy.delegation.Delegation.Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAccessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccessAccessibilityLevelEnumRuleCall_2_0 = (RuleCall)cAccessAssignment_2.eContents().get(0);
		private final Assignment cOperationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperationOperationTypeEnumRuleCall_3_0 = (RuleCall)cOperationAssignment_3.eContents().get(0);
		private final Keyword cDelegatedKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cFromKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSourceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSourceRoleCrossReference_6_0 = (CrossReference)cSourceAssignment_6.eContents().get(0);
		private final RuleCall cSourceRoleIDTerminalRuleCall_6_0_1 = (RuleCall)cSourceRoleCrossReference_6_0.eContents().get(1);
		private final Keyword cToKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTargetsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cTargetsRoleCrossReference_8_0 = (CrossReference)cTargetsAssignment_8.eContents().get(0);
		private final RuleCall cTargetsRoleIDTerminalRuleCall_8_0_1 = (RuleCall)cTargetsRoleCrossReference_8_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cTargetsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cTargetsRoleCrossReference_9_1_0 = (CrossReference)cTargetsAssignment_9_1.eContents().get(0);
		private final RuleCall cTargetsRoleIDTerminalRuleCall_9_1_0_1 = (RuleCall)cTargetsRoleCrossReference_9_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cFromKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cQueryKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cPatternAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final CrossReference cPatternPatternCrossReference_13_0 = (CrossReference)cPatternAssignment_13.eContents().get(0);
		private final RuleCall cPatternPatternSTRINGTerminalRuleCall_13_0_1 = (RuleCall)cPatternPatternCrossReference_13_0.eContents().get(1);
		private final Keyword cSelectKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cAssetAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cAssetModelFactParserRuleCall_15_0 = (RuleCall)cAssetAssignment_15.eContents().get(0);
		private final Assignment cBindingsAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cBindingsBindingParserRuleCall_16_0 = (RuleCall)cBindingsAssignment_16.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//@ Override Rule:
		//	'rule' name=ID access=AccessibilityLevel operation=OperationType? 'delegated' 'from'
		//	source=[ac::Role] 'to' targets+=[ac::Role] (',' targets+=[ac::Role])* '{'
		//	'from' 'query' pattern=[iql::Pattern|STRING]
		//	'select' asset=ModelFact
		//	bindings+=Binding*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'rule' name=ID access=AccessibilityLevel operation=OperationType? 'delegated' 'from' source=[ac::Role] 'to'
		//targets+=[ac::Role] (',' targets+=[ac::Role])* '{' 'from' 'query' pattern=[iql::Pattern|STRING] 'select'
		//asset=ModelFact bindings+=Binding* '}'
		public Group getGroup() { return cGroup; }
		
		//'rule'
		public Keyword getRuleKeyword_0() { return cRuleKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//access=AccessibilityLevel
		public Assignment getAccessAssignment_2() { return cAccessAssignment_2; }
		
		//AccessibilityLevel
		public RuleCall getAccessAccessibilityLevelEnumRuleCall_2_0() { return cAccessAccessibilityLevelEnumRuleCall_2_0; }
		
		//operation=OperationType?
		public Assignment getOperationAssignment_3() { return cOperationAssignment_3; }
		
		//OperationType
		public RuleCall getOperationOperationTypeEnumRuleCall_3_0() { return cOperationOperationTypeEnumRuleCall_3_0; }
		
		//'delegated'
		public Keyword getDelegatedKeyword_4() { return cDelegatedKeyword_4; }
		
		//'from'
		public Keyword getFromKeyword_5() { return cFromKeyword_5; }
		
		//source=[ac::Role]
		public Assignment getSourceAssignment_6() { return cSourceAssignment_6; }
		
		//[ac::Role]
		public CrossReference getSourceRoleCrossReference_6_0() { return cSourceRoleCrossReference_6_0; }
		
		//ID
		public RuleCall getSourceRoleIDTerminalRuleCall_6_0_1() { return cSourceRoleIDTerminalRuleCall_6_0_1; }
		
		//'to'
		public Keyword getToKeyword_7() { return cToKeyword_7; }
		
		//targets+=[ac::Role]
		public Assignment getTargetsAssignment_8() { return cTargetsAssignment_8; }
		
		//[ac::Role]
		public CrossReference getTargetsRoleCrossReference_8_0() { return cTargetsRoleCrossReference_8_0; }
		
		//ID
		public RuleCall getTargetsRoleIDTerminalRuleCall_8_0_1() { return cTargetsRoleIDTerminalRuleCall_8_0_1; }
		
		//(',' targets+=[ac::Role])*
		public Group getGroup_9() { return cGroup_9; }
		
		//','
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//targets+=[ac::Role]
		public Assignment getTargetsAssignment_9_1() { return cTargetsAssignment_9_1; }
		
		//[ac::Role]
		public CrossReference getTargetsRoleCrossReference_9_1_0() { return cTargetsRoleCrossReference_9_1_0; }
		
		//ID
		public RuleCall getTargetsRoleIDTerminalRuleCall_9_1_0_1() { return cTargetsRoleIDTerminalRuleCall_9_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//'from'
		public Keyword getFromKeyword_11() { return cFromKeyword_11; }
		
		//'query'
		public Keyword getQueryKeyword_12() { return cQueryKeyword_12; }
		
		//pattern=[iql::Pattern|STRING]
		public Assignment getPatternAssignment_13() { return cPatternAssignment_13; }
		
		//[iql::Pattern|STRING]
		public CrossReference getPatternPatternCrossReference_13_0() { return cPatternPatternCrossReference_13_0; }
		
		//STRING
		public RuleCall getPatternPatternSTRINGTerminalRuleCall_13_0_1() { return cPatternPatternSTRINGTerminalRuleCall_13_0_1; }
		
		//'select'
		public Keyword getSelectKeyword_14() { return cSelectKeyword_14; }
		
		//asset=ModelFact
		public Assignment getAssetAssignment_15() { return cAssetAssignment_15; }
		
		//ModelFact
		public RuleCall getAssetModelFactParserRuleCall_15_0() { return cAssetModelFactParserRuleCall_15_0; }
		
		//bindings+=Binding*
		public Assignment getBindingsAssignment_16() { return cBindingsAssignment_16; }
		
		//Binding
		public RuleCall getBindingsBindingParserRuleCall_16_0() { return cBindingsBindingParserRuleCall_16_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	
	
	private final DelegationModelElements pDelegationModel;
	private final PolicyElements pPolicy;
	private final RuleElements pRule;
	
	private final Grammar grammar;
	
	private final RulesGrammarAccess gaRules;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DelegationGrammarAccess(GrammarProvider grammarProvider,
			RulesGrammarAccess gaRules,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaRules = gaRules;
		this.gaTerminals = gaTerminals;
		this.pDelegationModel = new DelegationModelElements();
		this.pPolicy = new PolicyElements();
		this.pRule = new RuleElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.mondo.collaboration.policy.delegation.Delegation".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public RulesGrammarAccess getRulesGrammarAccess() {
		return gaRules;
	}
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DelegationModel:
	//	^import=Import
	//	policy=Policy;
	public DelegationModelElements getDelegationModelAccess() {
		return pDelegationModel;
	}
	
	public ParserRule getDelegationModelRule() {
		return getDelegationModelAccess().getRule();
	}
	
	//@ Override Policy:
	//	'policy' name=ID '{'
	//	rules+=Rule*
	//	'}' 'with' resolution=ResolutionType 'resolution';
	public PolicyElements getPolicyAccess() {
		return pPolicy;
	}
	
	public ParserRule getPolicyRule() {
		return getPolicyAccess().getRule();
	}
	
	//@ Override Rule:
	//	'rule' name=ID access=AccessibilityLevel operation=OperationType? 'delegated' 'from'
	//	source=[ac::Role] 'to' targets+=[ac::Role] (',' targets+=[ac::Role])* '{'
	//	'from' 'query' pattern=[iql::Pattern|STRING]
	//	'select' asset=ModelFact
	//	bindings+=Binding*
	//	'}';
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//AccessControlModel:
	//	imports+=Import*
	//	roles+=Role*
	//	policy=super::Policy;
	public RulesGrammarAccess.AccessControlModelElements getAccessControlModelAccess() {
		return gaRules.getAccessControlModelAccess();
	}
	
	public ParserRule getAccessControlModelRule() {
		return getAccessControlModelAccess().getRule();
	}
	
	//Import:
	//	'import' importURI=STRING;
	public RulesGrammarAccess.ImportElements getImportAccess() {
		return gaRules.getImportAccess();
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//Role:
	//	User | Group;
	public RulesGrammarAccess.RoleElements getRoleAccess() {
		return gaRules.getRoleAccess();
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}
	
	//User:
	//	'user' name=ID;
	public RulesGrammarAccess.UserElements getUserAccess() {
		return gaRules.getUserAccess();
	}
	
	public ParserRule getUserRule() {
		return getUserAccess().getRule();
	}
	
	//Group:
	//	'group' name=ID '{' roles+=[Role] (',' roles+=[Role])* '}';
	public RulesGrammarAccess.GroupElements getGroupAccess() {
		return gaRules.getGroupAccess();
	}
	
	public ParserRule getGroupRule() {
		return getGroupAccess().getRule();
	}
	
	//ModelFact:
	//	ObjectFact | ReferenceFact | AttributeFact;
	public RulesGrammarAccess.ModelFactElements getModelFactAccess() {
		return gaRules.getModelFactAccess();
	}
	
	public ParserRule getModelFactRule() {
		return getModelFactAccess().getRule();
	}
	
	//ObjectFact:
	//	'obj' '(' variable=[iql::Variable] ')';
	public RulesGrammarAccess.ObjectFactElements getObjectFactAccess() {
		return gaRules.getObjectFactAccess();
	}
	
	public ParserRule getObjectFactRule() {
		return getObjectFactAccess().getRule();
	}
	
	//ReferenceFact:
	//	'ref' '(' sourceVar=[iql::Variable] '->' targetVar=[iql::Variable] ':' reference=[ecore::EReference] ')';
	public RulesGrammarAccess.ReferenceFactElements getReferenceFactAccess() {
		return gaRules.getReferenceFactAccess();
	}
	
	public ParserRule getReferenceFactRule() {
		return getReferenceFactAccess().getRule();
	}
	
	//AttributeFact:
	//	'attr' '(' variable=[iql::Variable] ':' attribute=[ecore::EAttribute] ')';
	public RulesGrammarAccess.AttributeFactElements getAttributeFactAccess() {
		return gaRules.getAttributeFactAccess();
	}
	
	public ParserRule getAttributeFactRule() {
		return getAttributeFactAccess().getRule();
	}
	
	//Binding:
	//	'where' variable=[iql::Variable] 'is' 'bound' 'to' bind=Bind;
	public RulesGrammarAccess.BindingElements getBindingAccess() {
		return gaRules.getBindingAccess();
	}
	
	public ParserRule getBindingRule() {
		return getBindingAccess().getRule();
	}
	
	//Bind:
	//	valueString=STRING | valueInteger=INT;
	public RulesGrammarAccess.BindElements getBindAccess() {
		return gaRules.getBindAccess();
	}
	
	public ParserRule getBindRule() {
		return getBindAccess().getRule();
	}
	
	//enum AccessibilityLevel:
	//	ALLOW='allow' | OBFUSCATE='obfuscate' | DENY='deny';
	public RulesGrammarAccess.AccessibilityLevelElements getAccessibilityLevelAccess() {
		return gaRules.getAccessibilityLevelAccess();
	}
	
	public EnumRule getAccessibilityLevelRule() {
		return getAccessibilityLevelAccess().getRule();
	}
	
	//enum OperationType:
	//	UNSET='unset' | READ='R' | WRITE='W' | READWRITE='RW';
	public RulesGrammarAccess.OperationTypeElements getOperationTypeAccess() {
		return gaRules.getOperationTypeAccess();
	}
	
	public EnumRule getOperationTypeRule() {
		return getOperationTypeAccess().getRule();
	}
	
	//enum ResolutionType:
	//	RESTRICTIVE='restrictive' | PERMISSIVE='permissive';
	public RulesGrammarAccess.ResolutionTypeElements getResolutionTypeAccess() {
		return gaRules.getResolutionTypeAccess();
	}
	
	public EnumRule getResolutionTypeRule() {
		return getResolutionTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
